# $Id$

# This is a rules file for tagging modules in this distribution as
# "core" or "extension".  Every rule is applied to every module, in
# order, and the final values are applied to each module.
#
# Module tagging rules are in the form:
#
#   module-mask is (core|extension|data)
#
# Dependency tagging rules are in the form:
#
#   module-mask (wants|needs) dependent-mask
#
# Core modules must be able to load all their "needs" dependencies.
# The program exits with a failure code (designed to stop a makefile)
# if any of the distribution's core modules needss a dependent that
# can't be loaded.
#
# Data modules are ignored.
#
# All other module/need combinations generate appropriate warnings.

# POE is mostly extensions with a few core modules.  Dependencies are
# "hard" by default.  Modules are extensions by default.

* needs *
* is extension

# Core modules are the exception.  Set them explicitly.  "Data" files
# are ignored.

POE::Kernel       is core
POE::Session      is core
POE::NFA          is core
POE::Preprocessor is core

*.pod             is data
CHANGES           is data
HISTORY           is data
MANIFEST          is data
NEEDS             is data
README            is data
TODO              is data

# Test 8 uses a module which it knows doesn't exist.  Skip dependency
# checking for that file.

t/08_errors.t     is data

# This bundled module contains C< use Acme::KillerApp > in its 
# documentation which is confusing the NEEDS parser.

mylib::* is data
mylib/*  is data

# Soft dependencies are the exception.  Set them explicitly.

POE::Kernel::Tk        wants Tk                 800.021
POE::Kernel            wants Time::HiRes
POE::Filter::Reference wants FreezeThaw
POE::Filter::Reference wants Storable
POE::Filter::Reference wants Compress::Zlib
*                      wants POE::NonExistent
POE::Wheel::Run        wants IO::Pty

mylib/deptest.perl     wants File::Spec

# End.
